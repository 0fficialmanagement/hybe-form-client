{"version":3,"file":"index-DD-QUb0-.js","sources":["../../script.js"],"sourcesContent":["// ModalManager: Robust modal management class for Bootstrap modals\r\nclass ModalManager {\r\n  constructor() {\r\n    this.activeModals = new Map();\r\n    this.activeTimers = new Map();\r\n  }\r\n\r\n  initialize(modalId) {\r\n    const element = document.getElementById(modalId);\r\n    if (!element) {\r\n      console.error(`Modal ${modalId} not found`);\r\n      return null;\r\n    }\r\n    try {\r\n      const modal = new bootstrap.Modal(element);\r\n      this.activeModals.set(modalId, modal);\r\n\r\n      element.addEventListener(\r\n        \"hidden.bs.modal\",\r\n        () => {\r\n          this.cleanup(modalId);\r\n        },\r\n        { once: true }\r\n      );\r\n\r\n      return modal;\r\n    } catch (error) {\r\n      console.error(`Failed to initialize modal \"${modalId}\": ${error.message}`);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  show(modalId, options = {}) {\r\n    const modal = this.activeModals.get(modalId) || this.initialize(modalId);\r\n    if (!modal) return;\r\n\r\n    if (options.countdown) {\r\n      this.setupCountdown(modalId, options.countdown);\r\n    }\r\n\r\n    modal.show();\r\n  }\r\n\r\n  hide(modalId) {\r\n    const modal = this.activeModals.get(modalId);\r\n    if (modal) {\r\n      modal.hide();\r\n    }\r\n  }\r\n\r\n  setupCountdown(modalId, { duration, elementId, onComplete }) {\r\n    const countdownElement = document.getElementById(elementId);\r\n    if (!countdownElement) {\r\n      console.error(`Countdown element \"${elementId}\" not found`);\r\n      return;\r\n    }\r\n\r\n    let countdown = duration;\r\n    countdownElement.textContent = countdown;\r\n\r\n    const timer = setInterval(() => {\r\n      countdown--;\r\n      countdownElement.textContent = countdown;\r\n\r\n      if (countdown <= 0) {\r\n        this.cleanup(modalId);\r\n        this.hide(modalId);\r\n        if (typeof onComplete === \"function\") {\r\n          try {\r\n            onComplete();\r\n          } catch (error) {\r\n            console.error(`Error in onComplete callback: ${error.message}`);\r\n          }\r\n        }\r\n      }\r\n    }, 1000);\r\n\r\n    this.activeTimers.set(modalId, timer);\r\n  }\r\n\r\n  cleanup(modalId) {\r\n    const timer = this.activeTimers.get(modalId);\r\n    if (timer) {\r\n      clearInterval(timer);\r\n      this.activeTimers.delete(modalId);\r\n    }\r\n  }\r\n}\r\n\r\nconst modalManager = new ModalManager();\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  // Initialize AOS animations (run once for performance)\r\n  if (typeof AOS !== \"undefined\") {\r\n    AOS.init({ duration: 800, once: true });\r\n  }\r\n\r\n  // Form and modal DOM elements\r\n  const form = document.getElementById(\"subscription-form\");\r\n  const formMessage = document.getElementById(\"form-message\");\r\n  const referralCodeInput = document.getElementById(\"referral-code\");\r\n  const fullNameInput = document.getElementById(\"full-name\");\r\n  const emailInput = document.getElementById(\"email\");\r\n  const phoneInput = document.getElementById(\"phone\");\r\n  const dobInput = document.getElementById(\"dob\");\r\n  const genderSelect = document.getElementById(\"gender\");\r\n  const branchSelect = document.getElementById(\"branch\");\r\n  const groupSelect = document.getElementById(\"group\");\r\n  const artistSelect = document.getElementById(\"artist\");\r\n  const paymentTypeSelect = document.getElementById(\"payment-type\");\r\n  const installmentOptions = document.getElementById(\"installment-options\");\r\n  const paymentMethods = document.getElementById(\"payment-methods\");\r\n  const digitalCurrencyHomeBtn = document.getElementById(\"digital-currency-home-btn\");\r\n  const privacyPolicy = document.getElementById(\"privacy-policy\");\r\n  const subscriptionAgreement = document.getElementById(\"subscription-agreement\");\r\n  const permitIdInput = document.getElementById(\"permit-id\");\r\n  const submissionIdInput = document.getElementById(\"submission-id\");\r\n  const submitBtn = document.getElementById(\"submit-btn\");\r\n  const btnText = submitBtn ? submitBtn.querySelector(\".btn-text\") : null;\r\n  const spinner = submitBtn ? submitBtn.querySelector(\".spinner-border\") : null;\r\n  const progressBar = document.querySelector(\".progress-bar\");\r\n  const countrySelect = document.getElementById(\"country-select\");\r\n  const countryInput = document.getElementById(\"country\");\r\n  const currencyInput = document.getElementById(\"currency\");\r\n  const languageInput = document.getElementById(\"language\");\r\n  let iti;\r\n  let failure;\r\n  // Regular expression for email validation\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n  // Show onboarding modal immediately\r\n  modalManager.show(\"onboardingModal\");\r\n\r\n  // HYBE branch and group data\r\n  const branches = [\r\n    { name: \"BigHit Music\", groups: [\"BTS\", \"TXT\"] },\r\n    { name: \"PLEDIS Entertainment\", groups: [\"SEVENTEEN\", \"fromis_9\"] },\r\n    { name: \"BELIFT LAB\", groups: [\"ENHYPEN\", \"ILLIT\"] },\r\n    { name: \"KOZ Entertainment\", groups: [\"ZICO\"] },\r\n    { name: \"ADOR\", groups: [\"NewJeans\"] },\r\n    { name: \"HYBE Labels Japan\", groups: [\"&TEAM\"] },\r\n  ];\r\n\r\n  // Populate branch dropdown\r\n  branches.forEach((branch) => {\r\n    const option = document.createElement(\"option\");\r\n    option.value = branch.name;\r\n    option.textContent = branch.name;\r\n    branchSelect.appendChild(option);\r\n  });\r\n\r\n  // Update group dropdown based on branch selection\r\n  branchSelect.addEventListener(\"change\", () => {\r\n    const selectedBranch = branches.find((branch) => branch.name === branchSelect.value);\r\n    groupSelect.innerHTML = '<option value=\"\" disabled selected>Select a Group</option>';\r\n    artistSelect.innerHTML = '<option value=\"\" disabled selected>Select an Artist</option>';\r\n    if (selectedBranch) {\r\n      selectedBranch.groups.forEach((group) => {\r\n        const option = document.createElement(\"option\");\r\n        option.value = group;\r\n        option.textContent = group;\r\n        groupSelect.appendChild(option);\r\n      });\r\n    }\r\n    updateProgress();\r\n  });\r\n\r\n  // Update artist dropdown based on group selection\r\n  groupSelect.addEventListener(\"change\", () => {\r\n    artistSelect.innerHTML = '<option value=\"\" disabled selected>Select an Artist</option>';\r\n    const selectedGroup = groupSelect.value;\r\n    const artists = {\r\n      BTS: [\"RM\", \"Jin\", \"SUGA\", \"j-hope\", \"Jimin\", \"V\", \"Jung Kook\"],\r\n      TXT: [\"SOOBIN\", \"YEONJUN\", \"BEOMGYU\", \"TAEHYUN\", \"HUENINGKAI\"],\r\n      SEVENTEEN: [\r\n        \"S.COUPS\",\r\n        \"JEONGHAN\",\r\n        \"JOSHUA\",\r\n        \"JUN\",\r\n        \"HOSHI\",\r\n        \"WONWOO\",\r\n        \"WOOZI\",\r\n        \"THE 8\",\r\n        \"MINGYU\",\r\n        \"DK\",\r\n        \"SEUNGKWAN\",\r\n        \"VERNON\",\r\n        \"DINO\",\r\n      ],\r\n      \"fromis_9\": [\r\n        \"LEE SAEROM\",\r\n        \"SONG HAYOUNG\",\r\n        \"PARK JIWON\",\r\n        \"ROH JISUN\",\r\n        \"LEE SEOYEON\",\r\n        \"LEE CHAEYOUNG\",\r\n        \"LEE NAGYUNG\",\r\n        \"BAEK JIHEON\",\r\n      ],\r\n      ENHYPEN: [\"JUNGWON\", \"HEESEUNG\", \"JAY\", \"JAKE\", \"SUNGHOON\", \"SUNOO\", \"NI-KI\"],\r\n      ILLIT: [\"YUNAH\", \"MINJU\", \"MOKA\", \"WONHEE\", \"IROHA\"],\r\n      ZICO: [\"ZICO\"],\r\n      NewJeans: [\"MINJI\", \"HANNI\", \"DANIELLE\", \"HAERIN\", \"HYEIN\"],\r\n      \"&TEAM\": [\"K\", \"FUMA\", \"NICHOLAS\", \"EJ\", \"YUMA\", \"JO\", \"HARUA\", \"TAKI\", \"MAKI\"],\r\n    };\r\n    if (artists[selectedGroup]) {\r\n      artists[selectedGroup].forEach((artist) => {\r\n        const option = document.createElement(\"option\");\r\n        option.value = artist;\r\n        option.textContent = artist;\r\n        artistSelect.appendChild(option);\r\n      });\r\n    }\r\n    updateProgress();\r\n  });\r\n\r\n  /**\r\n   * Updates the progress bar based on filled form fields\r\n   */\r\n  function updateProgress() {\r\n    const totalFields = 14; // referral-code, full-name, email, phone, address-line1, city, state, postal-code, country-select, dob, gender, branch, group, artist, payment-type, contact-method\r\n    let filledFields = 0;\r\n    if (referralCodeInput.value) filledFields++;\r\n    if (fullNameInput.value) filledFields++;\r\n    if (emailInput.value) filledFields++;\r\n    if (phoneInput.value) filledFields++;\r\n    if (document.getElementById(\"address-line1\").value) filledFields++;\r\n    if (document.getElementById(\"city\").value) filledFields++;\r\n    if (document.getElementById(\"state\").value) filledFields++;\r\n    if (document.getElementById(\"postal-code\").value) filledFields++;\r\n    if (countrySelect.value) filledFields++;\r\n    if (dobInput.value) filledFields++;\r\n    if (genderSelect.value) filledFields++;\r\n    if (branchSelect.value) filledFields++;\r\n    if (groupSelect.value) filledFields++;\r\n    if (artistSelect.value) filledFields++;\r\n    if (paymentTypeSelect.value) filledFields++;\r\n    if (document.querySelector('input[name=\"contact-method\"]:checked')) filledFields++;\r\n    const progress = (filledFields / totalFields) * 100;\r\n    progressBar.style.width = `${progress}%`;\r\n    progressBar.setAttribute(\"aria-valuenow\", progress);\r\n  }\r\n\r\n  // Toggle installment options and payment methods\r\n  if (paymentTypeSelect && installmentOptions) {\r\n    paymentTypeSelect.addEventListener(\"change\", () => {\r\n      if (paymentTypeSelect.value === \"Installment\") {\r\n        installmentOptions.classList.remove(\"d-none\");\r\n        document.getElementById(\"installment-plan\").required = true;\r\n      } else {\r\n        installmentOptions.classList.add(\"d-none\");\r\n        document.getElementById(\"installment-plan\").required = false;\r\n      }\r\n      document.querySelectorAll('input[name=\"payment-method\"]').forEach((input) => {\r\n        input.required = true;\r\n      });\r\n      updateProgress();\r\n    });\r\n  }\r\n\r\n  // Digital currency home button\r\n  if (digitalCurrencyHomeBtn) {\r\n    digitalCurrencyHomeBtn.addEventListener(\"click\", () => {\r\n      modalManager.hide(\"digitalCurrencySuccessModal\");\r\n      window.location.href = \"https://hybecorp.com\";\r\n    });\r\n  }\r\n\r\n  // --- Global Toast Notification System ---\r\n  const globalToast = document.getElementById('global-toast');\r\n  const globalToastBody = document.getElementById('global-toast-body');\r\n  let toastInstance = null;\r\n  function showToast(message, type = 'info', duration = 4000) {\r\n    if (!globalToast || !globalToastBody) return;\r\n    globalToastBody.textContent = message;\r\n    globalToast.classList.remove('bg-primary', 'bg-success', 'bg-danger', 'bg-warning', 'bg-info');\r\n    if (type === 'success') globalToast.classList.add('bg-success');\r\n    else if (type === 'error' || type === 'danger') globalToast.classList.add('bg-danger');\r\n    else if (type === 'warning') globalToast.classList.add('bg-warning');\r\n    else if (type === 'info') globalToast.classList.add('bg-info');\r\n    else globalToast.classList.add('bg-primary');\r\n    if (!toastInstance) toastInstance = new bootstrap.Toast(globalToast, { delay: duration });\r\n    else toastInstance._config.delay = duration;\r\n    toastInstance.show();\r\n  }\r\n  // Example: showToast('Welcome to HYBE Fan-Permit!', 'success');\r\n\r\n  // Patch showMessage to also show toast\r\n  function showMessage(message, type = \"info\") {\r\n    if (formMessage) {\r\n      formMessage.className = `mt-3 text-center alert alert-${type} alert-dismissible fade show`;\r\n      formMessage.textContent = message;\r\n      formMessage.classList.remove(\"d-none\");\r\n      setTimeout(() => {\r\n        formMessage.classList.add(\"d-none\");\r\n      }, 7000);\r\n    }\r\n    showToast(message, type);\r\n  }\r\n\r\n  // --- Language Switcher (auto-detect) ---\r\n  const languageSwitcher = document.getElementById('language-switcher');\r\n  function setLanguage(lang) {\r\n    // For demo: just set hidden input, can be extended for i18n\r\n    if (languageInput) languageInput.value = lang;\r\n    // Optionally, reload or update UI text here\r\n    showToast(`Language set to: ${languageSwitcher.options[languageSwitcher.selectedIndex].text}`, 'info');\r\n  }\r\n  if (languageSwitcher) {\r\n    // Auto-detect browser language on first load if auto\r\n    if (languageSwitcher.value === 'auto') {\r\n      const browserLang = navigator.language ? navigator.language.slice(0,2) : 'en';\r\n      const found = Array.from(languageSwitcher.options).find(opt => opt.value === browserLang);\r\n      if (found) languageSwitcher.value = browserLang;\r\n      setLanguage(languageSwitcher.value);\r\n    }\r\n    languageSwitcher.addEventListener('change', function() {\r\n      setLanguage(this.value);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Show feedback messages for the user\r\n   */\r\n  function showMessage(message, type = \"info\") {\r\n    if (formMessage) {\r\n      formMessage.className = `mt-3 text-center alert alert-${type} alert-dismissible fade show`;\r\n      formMessage.textContent = message;\r\n      formMessage.classList.remove(\"d-none\");\r\n      setTimeout(() => {\r\n        formMessage.classList.add(\"d-none\");\r\n      }, 7000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset the submit button state\r\n   */\r\n  function resetButton() {\r\n    if (submitBtn && spinner && btnText) {\r\n      submitBtn.disabled = false;\r\n      spinner.classList.add(\"d-none\");\r\n      btnText.classList.remove(\"d-none\");\r\n    }\r\n  }\r\n\r\n  // Add input event listeners for progress updates\r\n  [\r\n    referralCodeInput,\r\n    fullNameInput,\r\n    emailInput,\r\n    phoneInput,\r\n    document.getElementById(\"address-line1\"),\r\n    document.getElementById(\"address-line2\"),\r\n    document.getElementById(\"city\"),\r\n    document.getElementById(\"state\"),\r\n    document.getElementById(\"postal-code\"),\r\n    countrySelect,\r\n    dobInput,\r\n    genderSelect,\r\n    branchSelect,\r\n    groupSelect,\r\n    artistSelect,\r\n    paymentTypeSelect,\r\n  ].forEach((input) => {\r\n    if (input) {\r\n      input.addEventListener(\"input\", updateProgress);\r\n    }\r\n  });\r\n\r\n  document.querySelectorAll('input[name=\"contact-method\"]').forEach((input) => {\r\n    input.addEventListener(\"change\", updateProgress);\r\n  });\r\n\r\n  // Initialize tooltips for accessibility\r\n  document.querySelectorAll('[data-bs-toggle=\"tooltip\"]').forEach((tooltipTriggerEl) => {\r\n    new bootstrap.Tooltip(tooltipTriggerEl);\r\n  });\r\n\r\n  // --- Phone number: emoji flag + country code prefix, no dropdown ---\r\n  const phonePrefix = document.getElementById(\"phone-prefix\");\r\n  if (phonePrefix && phoneInput) {\r\n    // Country data: code, dial, format, validation regex\r\n    const countryData = {\r\n      US: { dial: \"+1\", format: v => v.replace(/(\\d{3})(\\d{3})(\\d{0,4})/, (m,a,b,c)=>c?`(${a}) ${b}-${c}`:b?`(${a}) ${b}`:a), regex: /^\\d{10}$/ },\r\n      GB: { dial: \"+44\", format: v => v.replace(/(\\d{5})(\\d{0,6})/, (m,a,b)=>b?`${a} ${b}`:a), regex: /^\\d{10,11}$/ },\r\n      JP: { dial: \"+81\", format: v => v.replace(/(\\d{2,4})(\\d{2,4})(\\d{0,4})/, (m,a,b,c)=>c?`${a}-${b}-${c}`:b?`${a}-${b}`:a), regex: /^\\d{10,11}$/ },\r\n      KR: { dial: \"+82\", format: v => v.replace(/(\\d{2,3})(\\d{3,4})(\\d{0,4})/, (m,a,b,c)=>c?`${a}-${b}-${c}`:b?`${a}-${b}`:a), regex: /^\\d{9,10}$/ },\r\n      // Add more as needed\r\n    };\r\n    // Helper to get emoji flag from country code\r\n    function countryCodeToFlagEmoji(cc) {\r\n      if (!cc) return \"🌐\";\r\n      return cc\r\n        .toUpperCase()\r\n        .replace(/./g, char => String.fromCodePoint(127397 + char.charCodeAt()));\r\n    }\r\n    // Default to US\r\n    let userCC = \"US\";\r\n    let userDial = countryData[userCC].dial;\r\n    let userFormat = countryData[userCC].format;\r\n    let userRegex = countryData[userCC].regex;\r\n    // GeoIP lookup (using ipwho.is for reliability)\r\n    fetch(\"https://ipwho.is/\")\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log('GeoIP response:', data); // Debug: see what country_code is returned\r\n        const cc = data.country_code ? data.country_code.toUpperCase() : '';\r\n        if (cc && countryData[cc]) {\r\n          userCC = cc;\r\n          userDial = countryData[userCC].dial;\r\n          userFormat = countryData[userCC].format;\r\n          userRegex = countryData[userCC].regex;\r\n        }\r\n        phonePrefix.textContent = `${countryCodeToFlagEmoji(userCC)} ${userDial}`;\r\n      })\r\n      .catch(() => {\r\n        phonePrefix.textContent = `${countryCodeToFlagEmoji(userCC)} ${userDial}`;\r\n      });\r\n    // Expanded countryData for more coverage\r\n    Object.assign(countryData, {\r\n      CA: { dial: \"+1\", format: v => v.replace(/(\\d{3})(\\d{3})(\\d{0,4})/, (m,a,b,c)=>c?`(${a}) ${b}-${c}`:b?`(${a}) ${b}`:a), regex: /^\\d{10}$/ },\r\n      AU: { dial: \"+61\", format: v => v.replace(/(\\d{1,4})(\\d{3})(\\d{0,3})/, (m,a,b,c)=>c?`${a} ${b} ${c}`:b?`${a} ${b}`:a), regex: /^\\d{9,10}$/ },\r\n      IN: { dial: \"+91\", format: v => v.replace(/(\\d{5})(\\d{0,5})/, (m,a,b)=>b?`${a} ${b}`:a), regex: /^\\d{10}$/ },\r\n      DE: { dial: \"+49\", format: v => v.replace(/(\\d{3,5})(\\d{3,8})/, (m,a,b)=>b?`${a} ${b}`:a), regex: /^\\d{10,11}$/ },\r\n      FR: { dial: \"+33\", format: v => v.replace(/(\\d{1})(\\d{2})(\\d{2})(\\d{2})(\\d{0,2})/, (m,a,b,c,d,e)=>e?`${a} ${b} ${c} ${d} ${e}`:d?`${a} ${b} ${c} ${d}`:c?`${a} ${b} ${c}`:b?`${a} ${b}`:a), regex: /^\\d{9,10}$/ },\r\n      CN: { dial: \"+86\", format: v => v.replace(/(\\d{3})(\\d{4})(\\d{0,4})/, (m,a,b,c)=>c?`${a} ${b} ${c}`:b?`${a} ${b}`:a), regex: /^\\d{11}$/ },\r\n      BR: { dial: \"+55\", format: v => v.replace(/(\\d{2})(\\d{5})(\\d{0,4})/, (m,a,b,c)=>c?`(${a}) ${b}-${c}`:b?`(${a}) ${b}`:a), regex: /^\\d{10,11}$/ },\r\n      RU: { dial: \"+7\", format: v => v.replace(/(\\d{3})(\\d{3})(\\d{0,4})/, (m,a,b,c)=>c?`${a} ${b} ${c}`:b?`${a} ${b}`:a), regex: /^\\d{10}$/ },\r\n      ZA: { dial: \"+27\", format: v => v.replace(/(\\d{2})(\\d{3})(\\d{0,4})/, (m,a,b,c)=>c?`${a} ${b} ${c}`:b?`${a} ${b}`:a), regex: /^\\d{9}$/ },\r\n      NG: { dial: \"+234\", format: v => v.replace(/(\\d{3})(\\d{3})(\\d{0,4})/, (m,a,b,c)=>c?`${a} ${b} ${c}`:b?`${a} ${b}`:a), regex: /^\\d{10}$/ },\r\n      // Add more as needed\r\n    });\r\n    // Format and validate as user types\r\n    const phoneError = document.getElementById(\"phone-error\");\r\n    function cleanNumber(val) { return val.replace(/\\D/g,\"\"); }\r\n    function formatAndValidate() {\r\n      let raw = cleanNumber(phoneInput.value);\r\n      phoneInput.value = userFormat(raw);\r\n      if (!userRegex.test(raw)) {\r\n        phoneError.textContent = \"Please enter a valid phone number.\";\r\n        phoneError.classList.add(\"d-block\");\r\n        phoneInput.setAttribute(\"aria-invalid\", \"true\");\r\n        phoneInput.classList.add(\"is-invalid\");\r\n        phoneInput.classList.remove(\"is-valid\");\r\n        return false;\r\n      } else {\r\n        phoneError.textContent = \"\";\r\n        phoneError.classList.remove(\"d-block\");\r\n        phoneInput.setAttribute(\"aria-invalid\", \"false\");\r\n        phoneInput.classList.remove(\"is-invalid\");\r\n        phoneInput.classList.add(\"is-valid\");\r\n        return true;\r\n      }\r\n    }\r\n    phoneInput.addEventListener(\"input\", formatAndValidate);\r\n    phoneInput.addEventListener(\"blur\", formatAndValidate);\r\n    if (form) {\r\n      form.addEventListener(\"submit\", function(e) {\r\n        if (!formatAndValidate()) {\r\n          e.preventDefault();\r\n          phoneInput.focus();\r\n          showMessage(\"Please enter a valid phone number before submitting.\", \"danger\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Form submission handler\r\n  // (Removed custom JS handler to allow Netlify Forms to work natively)\r\n\r\n  // FormData polyfill for environments where it's not available\r\n  if (typeof FormData === 'undefined') {\r\n    window.FormData = function(form) {\r\n      const data = {};\r\n      Array.from(form.elements).forEach(el => {\r\n        if (el.name && !el.disabled) {\r\n          data[el.name] = el.value;\r\n        }\r\n      });\r\n      return {\r\n        forEach: (cb) => {\r\n          Object.entries(data).forEach(([k, v]) => cb(v, k));\r\n        }\r\n      };\r\n    };\r\n  }\r\n\r\n  // --- Auto-select country and dynamic address format ---\r\n  // Populate country dropdown with all countries (global)\r\n  async function populateCountryDropdown() {\r\n    // Clear dropdown before populating (prevents duplicates)\r\n    countrySelect.innerHTML = '<option value=\"\" disabled selected>Select Country</option>';\r\n    let countries = [];\r\n    let loaded = false;\r\n    // 1. Try GeoNames API (requires username, demo is public)\r\n    try {\r\n      const res = await fetch('https://secure.geonames.org/countryInfoJSON?username=demo');\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        if (data.geonames && Array.isArray(data.geonames)) {\r\n          countries = data.geonames.map(c => ({ code: c.countryCode, name: c.countryName }));\r\n          loaded = true;\r\n        }\r\n      }\r\n    } catch (e) {}\r\n    // 2. Fallback: REST Countries v2\r\n    if (!loaded) {\r\n      try {\r\n        const res = await fetch('https://restcountries.com/v2/all?fields=name,alpha2Code');\r\n        if (res.ok) {\r\n          const data = await res.json();\r\n          countries = data.map(c => ({ code: c.alpha2Code, name: c.name }));\r\n          loaded = true;\r\n        }\r\n      } catch (e) {}\r\n    }\r\n    // 3. Fallback: Static list (top 10 for brevity, expand as needed)\r\n    if (!loaded) {\r\n      countries = [\r\n        { code: 'US', name: 'United States' },\r\n        { code: 'GB', name: 'United Kingdom' },\r\n        { code: 'JP', name: 'Japan' },\r\n        { code: 'KR', name: 'South Korea' },\r\n        { code: 'CN', name: 'China' },\r\n        { code: 'FR', name: 'France' },\r\n        { code: 'DE', name: 'Germany' },\r\n        { code: 'IN', name: 'India' },\r\n        { code: 'BR', name: 'Brazil' },\r\n        { code: 'CA', name: 'Canada' }\r\n      ];\r\n      showMessage('Could not load full country list. Using fallback.', 'warning');\r\n    }\r\n    // Sort and populate\r\n    countries.sort((a, b) => a.name.localeCompare(b.name));\r\n    countries.forEach(c => {\r\n      const opt = document.createElement('option');\r\n      opt.value = c.code;\r\n      opt.textContent = c.name;\r\n      countrySelect.appendChild(opt);\r\n    });\r\n    // Remove 'selected' from the default option so auto-select works\r\n    const defaultOpt = countrySelect.querySelector('option[value=\"\"]');\r\n    if (defaultOpt) defaultOpt.removeAttribute('selected');\r\n    // After populating, set geoIP country using ipwho.is\r\n    try {\r\n      const res = await fetch(\"https://ipwho.is/\");\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        const cc = data.country_code ? data.country_code.toUpperCase() : '';\r\n        if (countrySelect && cc) {\r\n          // Find matching option (case-insensitive)\r\n          const opt = Array.from(countrySelect.options).find(o => o.value.toUpperCase() === cc);\r\n          if (opt) {\r\n            countrySelect.value = opt.value;\r\n            countryInput.value = opt.value;\r\n            updateAddressFieldsForCountry(opt.value);\r\n          }\r\n        }\r\n      }\r\n    } catch (e) {}\r\n  }\r\n\r\n  // Initial population of country dropdown\r\n  populateCountryDropdown();\r\n\r\n  // --- Auto-fill address fields based on IP (no fallbacks) ---\r\n  (async function autofillAddressFromIP() {\r\n    try {\r\n      const res = await fetch(\"https://ipwho.is/\");\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        // Only fill if data is present\r\n        if (data.city && document.getElementById(\"city\")) {\r\n          document.getElementById(\"city\").value = data.city;\r\n        }\r\n        if (data.region && document.getElementById(\"state\")) {\r\n          document.getElementById(\"state\").value = data.region;\r\n        }\r\n        if (data.postal && document.getElementById(\"postal-code\")) {\r\n          document.getElementById(\"postal-code\").value = data.postal;\r\n        }\r\n      }\r\n    } catch (e) {}\r\n  })();\r\n\r\n  // --- Dynamic address fields based on detected country ---\r\n  async function dynamicAddressFields() {\r\n    let detectedCountry = null;\r\n    try {\r\n      const res = await fetch(\"https://ipwho.is/\");\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        detectedCountry = data.country_code ? data.country_code.toUpperCase() : null;\r\n      }\r\n    } catch (e) {}\r\n    // Fallback to selected country if detection fails\r\n    if (!detectedCountry && countrySelect && countrySelect.value) {\r\n      detectedCountry = countrySelect.value.toUpperCase();\r\n    }\r\n    // Country-specific address formats\r\n    const addressFormats = {\r\n      US: {\r\n        fields: [\r\n          { id: \"address-line1\", label: \"Street Address\", placeholder: \"123 Main St\", required: true },\r\n          { id: \"address-line2\", label: \"Apt/Suite (optional)\", placeholder: \"Apt, suite, etc.\", required: false },\r\n          { id: \"city\", label: \"City\", placeholder: \"City\", required: true },\r\n          { id: \"state\", label: \"State\", placeholder: \"State\", required: true },\r\n          { id: \"postal-code\", label: \"ZIP Code\", placeholder: \"12345\", required: true, pattern: /^\\d{5}(-\\d{4})?$/i, error: \"Invalid ZIP code\" }\r\n        ],\r\n        order: [\"address-line1\",\"address-line2\",\"city\",\"state\",\"postal-code\"]\r\n      },\r\n      GB: {\r\n        fields: [\r\n          { id: \"address-line1\", label: \"Street Address\", placeholder: \"221B Baker St\", required: true },\r\n          { id: \"address-line2\", label: \"Apartment (optional)\", placeholder: \"Flat, suite, etc.\", required: false },\r\n          { id: \"city\", label: \"Town/City\", placeholder: \"London\", required: true },\r\n          { id: \"state\", label: \"County\", placeholder: \"County\", required: false },\r\n          { id: \"postal-code\", label: \"Postcode\", placeholder: \"SW1A 1AA\", required: true, pattern: /^[A-Z]{1,2}\\d[A-Z\\d]? ?\\d[A-Z]{2}$/i, error: \"Invalid UK postcode\" }\r\n        ],\r\n        order: [\"address-line1\",\"address-line2\",\"city\",\"state\",\"postal-code\"]\r\n      },\r\n      JP: {\r\n        fields: [\r\n          { id: \"postal-code\", label: \"Postal Code\", placeholder: \"100-0001\", required: true, pattern: /^\\d{3}-\\d{4}$/, error: \"Invalid postal code\" },\r\n          { id: \"address-line1\", label: \"Prefecture\", placeholder: \"Tokyo\", required: true },\r\n          { id: \"address-line2\", label: \"City/Ward\", placeholder: \"Chiyoda-ku\", required: true },\r\n          { id: \"city\", label: \"Town/Block\", placeholder: \"Kanda\", required: true },\r\n          { id: \"state\", label: \"Building/Apartment (optional)\", placeholder: \"Building, room, etc.\", required: false }\r\n        ],\r\n        order: [\"postal-code\",\"address-line1\",\"address-line2\",\"city\",\"state\"]\r\n      },\r\n      // Add more countries as needed\r\n    };\r\n    // Generic fallback\r\n    const genericFormat = {\r\n      fields: [\r\n        { id: \"address-line1\", label: \"Address Line 1\", placeholder: \"Address Line 1\", required: true },\r\n        { id: \"address-line2\", label: \"Address Line 2 (optional)\", placeholder: \"Address Line 2\", required: false },\r\n        { id: \"city\", label: \"City/Town\", placeholder: \"City/Town\", required: true },\r\n        { id: \"state\", label: \"State/Province/Region\", placeholder: \"State/Province/Region\", required: false },\r\n        { id: \"postal-code\", label: \"Postal Code\", placeholder: \"Postal Code\", required: true, pattern: /^.{2,10}$/, error: \"Invalid postal code\" }\r\n      ],\r\n      order: [\"address-line1\",\"address-line2\",\"city\",\"state\",\"postal-code\"]\r\n    };\r\n    const format = addressFormats[detectedCountry] || genericFormat;\r\n    // Update fields\r\n    format.fields.forEach(f => {\r\n      const el = document.getElementById(f.id);\r\n      if (el) {\r\n        el.placeholder = f.placeholder;\r\n        el.previousElementSibling && (el.previousElementSibling.textContent = f.label);\r\n        el.required = !!f.required;\r\n        el.pattern = f.pattern ? f.pattern.source : \"\";\r\n        el.setAttribute(\"data-error\", f.error || \"\");\r\n        // Show/hide\r\n        el.parentElement && (el.parentElement.style.display = \"\");\r\n      }\r\n    });\r\n    // Hide unused fields\r\n    [\"address-line1\",\"address-line2\",\"city\",\"state\",\"postal-code\"].forEach(id => {\r\n      if (!format.order.includes(id)) {\r\n        const el = document.getElementById(id);\r\n        if (el && el.parentElement) el.parentElement.style.display = \"none\";\r\n      }\r\n    });\r\n    // Reorder fields\r\n    const addressFields = document.getElementById(\"address-fields\");\r\n    if (addressFields) {\r\n      format.order.forEach(id => {\r\n        const el = document.getElementById(id);\r\n        if (el) addressFields.appendChild(el);\r\n      });\r\n    }\r\n    // Real-time validation for postal code\r\n    const postal = document.getElementById(\"postal-code\");\r\n    if (postal && format.fields.find(f=>f.id===\"postal-code\" && f.pattern)) {\r\n      postal.addEventListener(\"input\", function() {\r\n        const pat = format.fields.find(f=>f.id===\"postal-code\").pattern;\r\n        const err = format.fields.find(f=>f.id===\"postal-code\").error;\r\n        if (pat && !pat.test(postal.value)) {\r\n          postal.setCustomValidity(err);\r\n          postal.classList.add(\"is-invalid\");\r\n        } else {\r\n          postal.setCustomValidity(\"\");\r\n          postal.classList.remove(\"is-invalid\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n  // Run on page load and when country changes\r\n  dynamicAddressFields();\r\n  if (countrySelect) {\r\n    countrySelect.addEventListener(\"change\", dynamicAddressFields);\r\n  }\r\n\r\n  // --- Dynamic address fields based on country ---\r\n  // Address field visibility and requirements based on selected country\r\n  function updateAddressFieldsForCountry(countryCode) {\r\n    const addressFields = [\r\n      \"address-line1\",\r\n      \"address-line2\",\r\n      \"city\",\r\n      \"state\",\r\n      \"postal-code\",\r\n      \"country-select\",\r\n    ];\r\n    const isUS = countryCode === \"US\";\r\n    const isCA = countryCode === \"CA\";\r\n    const isGB = countryCode === \"GB\";\r\n    const isAU = countryCode === \"AU\";\r\n    const isIN = countryCode === \"IN\";\r\n    const isBR = countryCode === \"BR\";\r\n    const isFR = countryCode === \"FR\";\r\n    const isDE = countryCode === \"DE\";\r\n    const isJP = countryCode === \"JP\";\r\n    const isKR = countryCode === \"KR\";\r\n    const isCN = countryCode === \"CN\";\r\n    const isRU = countryCode === \"RU\";\r\n    const isZA = countryCode === \"ZA\";\r\n    const isNG = countryCode === \"NG\";\r\n\r\n    // Show/hide fields based on country\r\n    document.getElementById(\"address-line2\").closest(\".form-group\").classList.toggle(\"d-none\", isUS || isCA);\r\n    document.getElementById(\"state\").closest(\".form-group\").classList.toggle(\"d-none\", isUS || isCA);\r\n    document.getElementById(\"postal-code\").closest(\".form-group\").classList.toggle(\"d-none\", isUS || isCA);\r\n    document.getElementById(\"country-select\").closest(\".form-group\").classList.toggle(\"d-none\", isUS || isCA);\r\n\r\n    // Set required fields based on country\r\n    addressFields.forEach((field) => {\r\n      const element = document.getElementById(field);\r\n      if (element) {\r\n        element.required = !element.closest(\".form-group\").classList.contains(\"d-none\");\r\n      }\r\n    });\r\n\r\n    // Special cases for certain countries\r\n    if (isUS) {\r\n      document.getElementById(\"state\").setAttribute(\"placeholder\", \"State (e.g., CA)\");\r\n    } else if (isCA) {\r\n      document.getElementById(\"state\").setAttribute(\"placeholder\", \"Province (e.g., ON)\");\r\n    } else if (isGB) {\r\n      document.getElementById(\"state\").setAttribute(\"placeholder\", \"County (e.g., Greater London)\");\r\n    } else if (isAU) {\r\n      document.getElementById(\"state\").setAttribute(\"placeholder\", \"State/Territory (e.g., NSW)\");\r\n    } else if (isIN) {\r\n      document.getElementById(\"state\").setAttribute(\"placeholder\", \"State (e.g., Maharashtra)\");\r\n    } else if (isBR) {\r\n      document.getElementById(\"state\").setAttribute(\"placeholder\", \"Estado (e.g., São Paulo)\");\r\n    } else if (isFR) {\r\n      document.getElementById(\"state\").setAttribute(\"placeholder\", \"Région (e.g., Île-de-France)\");\r\n    } else if (isDE) {\r\n      document.getElementById(\"state\").setAttribute(\"placeholder\", \"Bundesland (e.g., Bayern)\");\r\n    } else if (isJP) {\r\n      document.getElementById(\"state\").setAttribute(\"placeholder\", \"都道府県 (e.g., 東京都)\");\r\n    } else if (isKR) {\r\n      document.getElementById(\"state\").setAttribute(\"placeholder\", \"시/도 (e.g., 서울특별시)\");\r\n    } else if (isCN) {\r\n      document.getElementById(\"state\").setAttribute(\"placeholder\", \"省/直辖市 (e.g., 北京市)\");\r\n    } else if (isRU) {\r\n      document.getElementById(\"state\").setAttribute(\"placeholder\", \"Регион (e.g., Москва)\");\r\n    } else if (isZA) {\r\n      document.getElementById(\"state\").setAttribute(\"placeholder\", \"Province (e.g., Gauteng)\");\r\n    } else if (isNG) {\r\n      document.getElementById(\"state\").setAttribute(\"placeholder\", \"State (e.g., Lagos)\");\r\n    } else {\r\n      document.getElementById(\"state\").removeAttribute(\"placeholder\");\r\n    }\r\n  }\r\n\r\n  // --- Generate random permit ID ---\r\n  function generatePermitId() {\r\n    const timestamp = Date.now().toString(36); // Convert timestamp to base-36 string\r\n    const randomNum = Math.random().toString(36).substring(2, 8); // Random alphanumeric string\r\n    return `PERMIT-${timestamp}-${randomNum}`;\r\n  }\r\n\r\n  // Utility: Shake an input field for invalid feedback\r\n  function shakeField(field) {\r\n    if (!field) return;\r\n    field.classList.remove('shake'); // reset if already shaking\r\n    // Force reflow to restart animation\r\n    void field.offsetWidth;\r\n    field.classList.add('shake');\r\n    field.addEventListener('animationend', function handler() {\r\n      field.classList.remove('shake');\r\n      field.removeEventListener('animationend', handler);\r\n    });\r\n  }\r\n\r\n  // Example: Shake on invalid phone\r\n  if (phoneInput) {\r\n    phoneInput.addEventListener('invalid', function(e) {\r\n      shakeField(phoneInput);\r\n    });\r\n  }\r\n\r\n  // Shake on invalid for all required fields\r\n  if (form) {\r\n    form.addEventListener('submit', function(e) {\r\n      let firstInvalid = null;\r\n      form.querySelectorAll('input, select, textarea').forEach(function(field) {\r\n        if (!field.checkValidity()) {\r\n          shakeField(field);\r\n          if (!firstInvalid) firstInvalid = field;\r\n        }\r\n      });\r\n      if (firstInvalid) {\r\n        firstInvalid.focus();\r\n      }\r\n    }, true);\r\n  }\r\n\r\n  // Payment modal and Stripe redirect logic\r\n  const paymentModal = document.getElementById('paymentModal');\r\n  const paymentCountdown = document.getElementById('payment-countdown');\r\n  let paymentTimer = null;\r\n\r\n  function showPaymentModalAndRedirect(amountType) {\r\n    let seconds = 5;\r\n    if (paymentCountdown) paymentCountdown.textContent = seconds;\r\n    const modal = new bootstrap.Modal(paymentModal);\r\n    modal.show();\r\n    paymentTimer = setInterval(() => {\r\n      seconds--;\r\n      if (paymentCountdown) paymentCountdown.textContent = seconds;\r\n      if (seconds <= 0) {\r\n        clearInterval(paymentTimer);\r\n        modal.hide();\r\n        // Stripe Checkout URLs (replace with your real session URLs)\r\n        let stripeUrl = '';\r\n        if (amountType === 'installment') {\r\n          stripeUrl = 'https://checkout.stripe.com/pay/cs_test_installment';\r\n        } else {\r\n          stripeUrl = 'https://checkout.stripe.com/pay/cs_test_full';\r\n        }\r\n        window.location.href = stripeUrl;\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  if (form) {\r\n    form.addEventListener('submit', function(e) {\r\n      // Only trigger for Card Payment\r\n      const cardPayment = document.getElementById('card-payment');\r\n      if (cardPayment && cardPayment.checked) {\r\n        // Validate form before showing modal\r\n        if (form.checkValidity()) {\r\n          e.preventDefault();\r\n          // Determine payment type\r\n          const paymentType = paymentTypeSelect ? paymentTypeSelect.value : 'Full Payment';\r\n          showPaymentModalAndRedirect(paymentType === 'Installment' ? 'installment' : 'full');\r\n        }\r\n      }\r\n    }, false);\r\n  }\r\n});\r\n"],"names":["ModalManager","modalId","element","modal","error","options","duration","elementId","onComplete","countdownElement","countdown","timer","modalManager","form","formMessage","referralCodeInput","fullNameInput","emailInput","phoneInput","dobInput","genderSelect","branchSelect","groupSelect","artistSelect","paymentTypeSelect","installmentOptions","digitalCurrencyHomeBtn","submitBtn","progressBar","countrySelect","countryInput","languageInput","branches","branch","option","selectedBranch","group","updateProgress","selectedGroup","artists","artist","filledFields","progress","input","globalToast","globalToastBody","toastInstance","showToast","message","type","languageSwitcher","setLanguage","lang","browserLang","opt","showMessage","tooltipTriggerEl","phonePrefix","countryCodeToFlagEmoji","cc","char","cleanNumber","val","formatAndValidate","raw","userFormat","userRegex","phoneError","countryData","v","m","a","b","c","userCC","userDial","res","data","d","e","el","cb","k","populateCountryDropdown","countries","loaded","defaultOpt","o","updateAddressFieldsForCountry","dynamicAddressFields","detectedCountry","addressFormats","genericFormat","format","f","id","addressFields","postal","pat","err","countryCode","isUS","isCA","isGB","isAU","isIN","isBR","isFR","isDE","isJP","isKR","isCN","isRU","isZA","isNG","field","shakeField","handler","firstInvalid","paymentModal","paymentCountdown","paymentTimer","showPaymentModalAndRedirect","amountType","seconds","stripeUrl","cardPayment","paymentType"],"mappings":"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"}